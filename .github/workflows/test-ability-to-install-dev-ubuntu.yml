name: Test ability to install EJAM - limited checks in dev branch only

on:
  push:
    branches: [ "development" ]



permissions:
  contents: read

jobs:
  test-ability-to-install-dev-ubuntu:
    if: ${{ !github.event.repository.private }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest] # , windows-latest, macOS-latest]
        r-version: [4.5]  # MORE OPTIONS CAN BE ADDED HERE BUT ARE IN TESTS OF MAIN BRANCH, e.g.,   4.1, 4.2, 4.3, 4.4, 4.5, release
        install-method: [github] # [github, url]  # Matrix for installation method

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GH_TOKEN: ${{ github.token }}
      GITHUB_PAT: ${{ github.token }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r-version }}

      - name: Restore R package cache
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}
          key: ${{ runner.os }}-R-${{ matrix.r-version }}-${{ hashFiles('**/DESCRIPTION') }}
          restore-keys: ${{ runner.os }}-R-${{ matrix.r-version }}-

      - name: System Libraries (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libfontconfig1-dev \
            libudunits2-dev \
            libcairo2-dev \
            libcurl4-openssl-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev \
            libgdal-dev \
            libgeos-dev \
            libproj-dev \
            libjq-dev \
            libprotobuf-dev \
            protobuf-compiler

      # - name: System Libraries (macOS)
      #   if: matrix.os == 'macOS-latest'
      #   run: |
      #     brew update
      #     # Install dependencies one by one with retry mechanism
      #     for pkg in freetype udunits cairo harfbuzz fribidi libpng libtiff jpeg gdal pkg-config; do
      #       for i in {1..3}; do
      #         if brew install $pkg; then
      #           break
      #         fi
      #         echo "Attempt $i to install $pkg failed. Retrying..."
      #         sleep 5
      #       done
      #     done
      #
      #     # Set up environment variables for jpeg
      #     echo 'export PATH="/opt/homebrew/opt/jpeg/bin:$PATH"' >> $GITHUB_ENV
      #     echo 'export LDFLAGS="-L/opt/homebrew/opt/jpeg/lib"' >> $GITHUB_ENV
      #     echo 'export CPPFLAGS="-I/opt/homebrew/opt/jpeg/include"' >> $GITHUB_ENV
      #     echo 'export PKG_CONFIG_PATH="/opt/homebrew/opt/jpeg/lib/pkgconfig"' >> $GITHUB_ENV

      # - name: Get DEVELOPMENT  BRANCH NOT Latest Release Tarball URL (gh CLI)
      #   id: get_release_url_gh
      #   if: matrix.install-method == 'url'
      #   run: |
      #     LATEST_TAG=$(gh release list --repo "${{ github.repository }}" --limit 1 --json tagName --jq '.[0].tagName')
      #     TAR_URL="https://github.com/${{ github.repository }}/archive/refs/tags/$LATEST_TAG.tar.gz"
      #     echo "TAR_URL=$TAR_URL" >> $GITHUB_ENV
      #   shell: bash


      - name: Install EJAM (method- ${{ matrix.install-method }})
        if: "!(matrix.install-method == 'url' && matrix.r-version == '4.3' && matrix.os == 'macOS')"
        run: |
          install.packages("remotes")
          if("${{ matrix.install-method }}" == "github") {
            remotes::install_github(
              "${{ github.repository }}", # what owner/repo has the pkg to try to install

              ref="development", build=FALSE,

              dependencies=TRUE,
              force=TRUE,
              INSTALL_opts = c("--with-keep.source", "--install-tests")
            )
          } else {
            # remotes::install_url(
            #   url = Sys.getenv("TAR_URL"),
            #   dependencies = TRUE
            # )
          }
        shell: Rscript {0}

      # - name: Restore R package cache  ## these seemed to be duplicates of lines 35-40 and not needed ?
      #   uses: actions/cache@v4
      #   with:
      #     path: ${{ runner.temp }}
      #     key: ${{ runner.os }}-R-${{ matrix.r-version }}-${{ hashFiles('**/DESCRIPTION') }}
      #     restore-keys: ${{ runner.os }}-R-${{ matrix.r-version }}-

      - name: Test Installation
        run: |
          library(EJAM)
          print("Package loaded successfully")
        shell: Rscript {0}
