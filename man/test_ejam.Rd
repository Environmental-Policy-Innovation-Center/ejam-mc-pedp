% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_ejam.R
\name{test_ejam}
\alias{test_ejam}
\title{run group(s) of unit tests for EJAM package
run tests of local source pkg EJAM, by group of functions, quietly, interactively or not, with compact summary of test results}
\usage{
test_ejam(
  ask = TRUE,
  noquestions = TRUE,
  useloadall = TRUE,
  y_basic = FALSE,
  y_latlon = TRUE,
  y_shp = TRUE,
  y_fips = TRUE,
  y_coverage_check = FALSE,
  y_runall = TRUE,
  y_runsome = FALSE,
  run_these = NULL,
  skip_these = c("ejscreenapi", "proximity"),
  y_stopif = FALSE,
  y_seeresults = TRUE,
  y_save = TRUE,
  y_tempdir = TRUE,
  mydir = NULL
)
}
\arguments{
\item{ask}{logical, whether it should ask in RStudio what parameter values to use}

\item{noquestions}{logical, whether to avoid questions later on about where to save shapefiles}

\item{useloadall}{logical, TRUE means use \code{\link[=load_all]{load_all()}}, FALSE means use \code{\link[=library]{library()}}.
But useloadall=T is essential actually, for unexported functions to be found when they are tested!}

\item{y_basic}{logical, whether to only run some basic \code{\link[=ejamit]{ejamit()}} functions, not do unit tests}

\item{y_latlon}{logical, if y_basic=T, whether to run the basic \code{\link[=ejamit]{ejamit()}} using points}

\item{y_shp}{logical, if y_basic=T, whether to run the basic \code{\link[=ejamit]{ejamit()}} using shapefile}

\item{y_fips}{logical, if y_basic=T, whether to run the basic \code{\link[=ejamit]{ejamit()}} using FIPS}

\item{y_coverage_check}{logical, whether to show simple lists of
which functions might not have unit tests, just based on matching source file and test file names.}

\item{y_runall}{logical, whether to run all tests instead of only some groups
(so y_runsome is FALSE)}

\item{y_runsome}{logical, whether to run only some groups of tests (so y_runall is FALSE)}

\item{run_these}{if y_runsome = T, a vector of group names to test, like 'fips', 'naics', etc.
see source code for list}

\item{skip_these}{if y_runall = T, a vector of group names to skip, like 'fips', 'naics', etc.}

\item{y_seeresults}{logical, whether to show results in console}

\item{y_save}{logical, whether to save files of results}

\item{y_tempdir}{logical, whether to save in tempdir}

\item{mydir}{optional folder}
}
\value{
a named list of objects like data.tables, e.g., named
'bytest', 'byfile', 'bygroup', 'params', 'passcount' and other summary stats, etc.
}
\description{
run group(s) of unit tests for EJAM package
run tests of local source pkg EJAM, by group of functions, quietly, interactively or not, with compact summary of test results
}
\details{
Note these require installing the package \href{https://testthat.r-lib.org}{testthat} first:

\if{html}{\out{<div class="sourceCode">}}\preformatted{[EJAM:::test_ejam()]         to test this local source pkg, by group of functions, quietly, summarized.

[devtools::test()]           is just a shortcut for [testthat::test_dir()], to run all tests in package.

[testthat::test_local()]     to test any local source pkg

[testthat::test_package()]   to test the installed version of a package

[testthat::test_check()]     to test the installed version of a package, in the way used by R CMD check or [utils::check()]
}\if{html}{\out{</div>}}
}
\examples{
\dontrun{
biglist1 <- EJAM:::test_ejam()
biglist2 <- EJAM:::test_ejam(ask = F,
      y_runsome = T, run_these = c('test', 'maps'),
      mydir = "~/../Downloads/unit testing") # for example
      }

}
\keyword{internal}
