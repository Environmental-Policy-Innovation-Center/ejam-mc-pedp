% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/url_ejamapi.R
\name{url_ejamapi}
\alias{url_ejamapi}
\title{Get URL(s) of HTML summary reports for use with EJAM-API}
\usage{
url_ejamapi(sitepoints = NULL, radius = 3, fips = NULL, shapefile = NULL, ...)
}
\arguments{
\item{sitepoints}{see \code{\link[=ejamit]{ejamit()}}}

\item{radius}{see \code{\link[=ejamit]{ejamit()}}, default is 0 if fips or shapefile specified}

\item{fips}{see \code{\link[=ejamit]{ejamit()}} but this initial version only works for a blockgroup FIPS!}

\item{shapefile}{see \code{\link[=ejamit]{ejamit()}}, but each polygon is encoded as geojson string
which might get too long for encoding in a URL for the API using GET}

\item{...}{ignored}
}
\value{
vector of character string URLs
}
\description{
Get URL(s) of HTML summary reports for use with EJAM-API
}
\details{
\itemize{
\item Work in progress - currently relies on API from https://github.com/edgi-govdata-archiving/EJAM-API
\item Another option in the future might be to construct a URL that is a link to the live EJAM
app but has url-encoded parameters that are app settings, such as sitepoints, radius_default, etc.
\item Will try to use the same input parameters as \code{\link[=ejamit]{ejamit()}} does.
}
}
\examples{
 pts = data.frame(lat=37.64122, lon=-122.41065)
 pts = data.frame(lat = c(37.64122, 43.92249), lon = c(-122.41065, -72.663705))
 x = url_ejamapi(sitepoints = pts)
 x = url_ejamapi(testpoints_10, radius = 3.1)
 x = url_ejamapi(system.file("testdata/latlon/testpoints_10.xlsx", package="EJAM"))

 y = url_ejamapi(fips = c("050014801001", "050014802001"))
 y = url_ejamapi(fips = testinput_fips_blockgroups)

 z = url_ejamapi(shapefile = testinput_shapes_2[2, c("geometry", "FIPS")])

 \dontrun{
 browseURL(x[1])
 browseURL(y[1])
 browseURL(z[1])
}

}
