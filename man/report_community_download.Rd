% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils_report_community_download.R
\name{report_community_download}
\alias{report_community_download}
\title{Generate Single-site or Multi-site Summary Report rendered as an HTML file for download in shiny app}
\usage{
report_community_download(
  file,
  row_index = NULL,
  react_cur_button,
  inshiny = FALSE,
  input_analysis_title,
  input_include_ejindexes,
  input_show_ratios_in_report,
  input_extratable_show_ratios_in_report,
  input_extratable_title,
  input_extratable_title_top_row,
  extratable_list_of_sections,
  extratable_hide_missing_rows_for,
  input_plotkind_1pager,
  input_Custom_title_for_bar_plot_of_indicators,
  input_circleweight_in,
  react_sanitized_analysis_title,
  react_sanitized_bt_rad_buff,
  react_total_pop,
  react_submitted_upload_method,
  react_data_uploaded,
  react_data_processed,
  react_ratio.to.us.d,
  react_report_map,
  react_v1_summary_plot,
  react_v1_summary_plot_state
)
}
\arguments{
\item{file}{for download}

\item{row_index}{which row of results (which location), related to react_cur_button}

\item{react_cur_button}{like "button_2", event button asking for a 1-site report, a shiny app reactive}

\item{inshiny}{logical}

\item{input_analysis_title}{a shiny app input$}

\item{input_include_ejindexes}{a shiny app input$}

\item{input_show_ratios_in_report}{a shiny app input$}

\item{input_extratable_show_ratios_in_report}{a shiny app input$}

\item{input_extratable_title}{a shiny app input$}

\item{input_extratable_title_top_row}{a shiny app input$}

\item{extratable_list_of_sections}{see \code{\link[=build_community_report]{build_community_report()}}}

\item{extratable_hide_missing_rows_for}{see \code{\link[=build_community_report]{build_community_report()}}}

\item{input_plotkind_1pager}{a shiny app input$, like "bar", "box", "ridgeline"}

\item{input_Custom_title_for_bar_plot_of_indicators}{a shiny app input$}

\item{input_circleweight_in}{a shiny app input$}

\item{react_sanitized_analysis_title}{a shiny app reactive}

\item{react_sanitized_bt_rad_buff}{a shiny app reactive}

\item{react_total_pop}{a shiny app reactive}

\item{react_submitted_upload_method}{a shiny app reactive}

\item{react_data_uploaded}{a shiny app reactive, like input to ejamit()}

\item{react_data_processed}{a shiny app reactive, like output from ejamit()}

\item{react_ratio.to.us.d}{a shiny app reactive}

\item{react_report_map}{a shiny app reactive, # map of all sites Overall}

\item{react_v1_summary_plot}{a shiny app reactive}

\item{react_v1_summary_plot_state}{a shiny app reactive}
}
\value{
Renders HTML report
}
\description{
Saves a 2 page report (on overall results or for just one site), with residential population and environmental indicators, Summary Indexes if needed, etc.
}
\details{
This function \code{\link[=report_community_download]{report_community_download()}} is similar to \code{\link[=build_community_report]{build_community_report()}}
(and could be merged with it ideally)
but was used by the shiny app to render the report as an HTML file for download
instead of returning HTML for display in a browser.

report_community_download() relies on helpers \code{\link[=report_setup_temp_files]{report_setup_temp_files()}} to copy files,
\code{\link[=map_single_location]{map_single_location()}} to draw map, \code{\link[=v1_summary_plot_report]{v1_summary_plot_report()}} to draw plot,
and \code{\link[rmarkdown:render]{rmarkdown::render()}} to do the parameterized render from .Rmd template into HTML
}
\seealso{
\code{\link[=build_community_report]{build_community_report()}}
}
\keyword{internal}
